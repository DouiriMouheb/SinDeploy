name: sin-app-prod

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-sinuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-sindb}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - sinproject
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-sinuser} -d ${DB_NAME:-sindb}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./Server
      target: production
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./Server/.env
    networks:
      - sinproject
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  client:
    build:
      context: ./Client
      target: production
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./Client/.env
    networks:
      - sinproject
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  caddy:
    build:
      context: ./caddy
      dockerfile: DockerFile
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./caddy/Caddyfile.prod:/etc/caddy/Caddyfile:ro
    networks:
      - sinproject
    depends_on:
      api:
        condition: service_healthy
      client:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  db_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  sinproject:
    driver: bridge
